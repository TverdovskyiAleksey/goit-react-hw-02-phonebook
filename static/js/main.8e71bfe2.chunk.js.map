{"version":3,"sources":["Form/Form.module.css","Container/Container.module.css","Filter/Filter.module.css","Contacts/Contacts.module.css","Container/Container.js","Form/Form.js","Contacts/Contacts.js","Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","Form","state","name","number","handleChange","e","currentTarget","value","setState","handelSubmit","preventDefault","props","onSubmit","reset","this","style","form","id","shortid","generate","type","pattern","title","onChange","required","button","Component","Contacts","contacts","onDeleteContact","list","map","item","text","onClick","Filter","App","initialContacts","filter","formSubmitHandler","some","contact","alert","split","string","charAt","toUpperCase","slice","join","deleteContact","contactId","prevState","changeFilter","getVisibleContact","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e71bfe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__p_5Ns\",\"button\":\"Form_button__3i1zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1EDDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__3Luib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__AYQe4\",\"item\":\"Contacts_item__2OJ2N\",\"text\":\"Contacts_text__3HmBK\",\"button\":\"Contacts_button__26KBu\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handelSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handelSubmit} className={style.form}>\r\n        <label>\r\n          <span>Name</span>\r\n          <input\r\n            id={shortid.generate()}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Number</span>\r\n          <input\r\n            id={shortid.generate()}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={style.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import style from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.item}>\r\n        <p className={style.text}>{name}:</p>\r\n        <span>{number}</span>\r\n        <button className={style.button} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={style.text}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Container from './Container';\r\nimport shortid from 'shortid';\r\nimport Form from './Form';\r\nimport Contacts from './Contacts';\r\nimport initialContacts from './Contacts/initialContacts.json';\r\nimport Filter from './Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: '',\r\n  };\r\n\r\n  formSubmitHandler = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(\r\n        `${name\r\n          .split(' ')\r\n          .map(string => string.charAt(0).toUpperCase() + string.slice(1))\r\n          .join(\r\n            ' ',\r\n          )} is already in contacts. Change contact's name or delete old.`,\r\n      );\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContact();\r\n\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <Contacts\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}